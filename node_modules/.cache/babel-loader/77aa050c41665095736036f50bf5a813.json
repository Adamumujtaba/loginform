{"ast":null,"code":"var _jsxFileName = \"/home/mujtaba/Desktop/MyExe/React Apps/loginform/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./styleFile.css\";\nimport Icon from \"./icon-error.svg\";\nimport ErrorIcon from './ErrorIcon';\nimport { Container } from './Style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    placeholder: \"email@example/com\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n  const [error, SetError] = useState({});\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }\n\n  ;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.firstname && values.lastname && values.email) {\n      setValid(true);\n    }\n\n    setSubmitted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Learn to Code by watching others \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"See how experienced developers solve problems in real-time. Watching scripted tutorials is great, but understanding how developers think is invaluable.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"firstname\",\n                placeholder: \"First Name\",\n                className: \"input-field\",\n                value: values.firstname,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: submitted && !values.firstname ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"First Name cannot be empty \", /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 80\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 47\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"lastname\",\n                className: \"input-field\",\n                placeholder: \"Last Name\",\n                value: values.lastname,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: submitted && !values.lastname ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Last Name cannot be empty \", /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 43\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                className: \"input-field\",\n                placeholder: submitted && !values.email ? values.placeholder : 'Email Address',\n                value: values.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: submitted && !values.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Looks like this is no an email \", /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 9\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"input-field\",\n                placeholder: \"Passsword\",\n                value: values.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: submitted && !values.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Password cannot be empty \", /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 74\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 43\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Claim your free trial \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"By clicking the button you are agreeing to our \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Terms and Servives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"xykpKwAdqULOd4H60Yqjh8eUqK8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mujtaba/Desktop/MyExe/React Apps/loginform/src/App.js"],"names":["React","useState","ErrorIcon","Container","App","validate","values","setValues","firstname","lastName","email","password","placeholder","submitted","setSubmitted","valid","setValid","error","SetError","handleChange","e","name","value","target","handleSubmit","event","preventDefault","lastname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport \"./styleFile.css\";\nimport Icon from './icon-error.svg'\nimport ErrorIcon from './ErrorIcon';\nimport { Container } from './Style';\n\n\nconst App = validate => {\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastName: \"\",\n    email:\"\",\n    password:\"\",\n    placeholder:\"email@example/com\"\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n  const [error, SetError] = useState({});\n\n  function handleChange(e){\n    const {name, value} = e.target;\n    setValues({...values, \n      [name]: value\n    })\n  };\n\n \n   \n  const handleSubmit = event => {\n    event.preventDefault();\n    if(values.firstname && values.lastname && values.email){\n      setValid(true);\n\n    }\n    setSubmitted(true);\n  } \n\n      \n\n\n  return (\n    <div>\n\n   \n    <Container>\n     \n      <div className='text'>\n      <h1>Learn to Code by watching others </h1>\n      {/* {submitted && valid ? <h2>Thank you for Submitting your Data</h2>: null}  */}\n      <p>\n        See how experienced developers solve problems in real-time.\n        Watching scripted tutorials is great, but understanding how\n        developers think is invaluable.\n      </p>\n      </div>\n     \n      <div>\n      <form onSubmit={handleSubmit}>  \n       <div>\n        <label>\n          <input \n            type='text'\n            name='firstname' \n            placeholder='First Name'\n            className='input-field'\n            value = {values.firstname}\n            onChange={handleChange}\n            />  \n            <i>\n            {submitted && !values.firstname ? <span>First Name cannot be empty <ErrorIcon /></span> : null }\n     \n          \n            </i> \n        </label>\n       </div> \n      \n      <div>\n      <label>           \n          <input \n          type='text'\n          name='lastname'\n          className='input-field' \n          placeholder='Last Name'\n          value = {values.lastname}\n          onChange={handleChange}\n          />\n          <i>\n        {submitted && !values.lastname ?  <span>Last Name cannot be empty <ErrorIcon /></span>  : null } \n          </i>\n        </label>\n      </div>\n   \n      <div>\n      <label>\n          <input \n          type='text'\n          name='email'\n          className='input-field' \n          placeholder= {submitted && !values.email ? values.placeholder : 'Email Address'  }\n          value = {values.email}\n          onChange={handleChange} />\n       \n        <i>\n\n        {submitted && !values.email ? \n        <span>Looks like this is no an email <ErrorIcon /></span> \n         : null }\n        {/* {submitted && !values.email.includes('@') ? <span>Invalid Email</span>: null} */}\n\n     \n      \n\n\n\n        </i>\n    </label>\n      </div>\n      \n      <div>\n      <label>\n          <input \n          type='password'\n          name='password'\n          className='input-field' \n          placeholder='Passsword'\n          value = {values.password}\n          onChange={handleChange} />\n        <i>\n        {submitted && !values.password ?  <span>Password cannot be empty <ErrorIcon /></span> : null } \n        </i>\n        </label>\n      </div>\n\n       <button type='submit'>Claim your free trial </button>\n       <p>\n         By clicking the button you are agreeing to our <strong>Terms and Servives</strong>\n       </p>\n      \n      </form>\n    \n      </div>\n       \n    </Container>\n    </div>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}